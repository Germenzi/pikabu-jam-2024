[gd_scene load_steps=3 format=3 uid="uid://c2h3kd7hpvrbn"]

[sub_resource type="GDScript" id="GDScript_38a08"]
resource_name = "main"
script/source = "extends CharacterBody2D

@export var hunt_distance : float = 150.0
@export var cookie_scan_distance : float = 200.0
@export var running_speed : float = 50.0
@export var chilling_walk_time_sec : float = 0.5
@export var chilling_stay_time_sec : float = 0.5

@export var cookie_container : Node
@export var bullets_container : Node

enum State {
	NONE,
	IDLE,
	HUNTING_COOKIE,
	EATING_COOKIE,
	RUNNING_AWAY,
	ATTACKING_PLAYER,
}


var _state : State = State.NONE
var _attack_ready : bool = true

var _target_cookie : Node2D = null

# chilling state data
var _chilling_time : float
var _is_chilling_walk : bool = false


func take_damage(damage:int) -> void:
	pass


func _ready() -> void:
	_state_idle()


func _process(delta: float) -> void:
	if _state == State.IDLE:
		_process_idle(delta)


func _physics_process(delta: float) -> void:
	if _state == State.HUNTING_COOKIE:
		if %NavigationAgent.is_navigation_finished():
			_state_eating_cookie()
			return
		
		velocity = global_position.direction_to(%NavigationAgent.get_next_path_position())*running_speed
	
	move_and_slide()


func _process_idle(delta:float) -> void:
	# неэффективно
	var possible_targets : Array[Node] = (get_tree().get_nodes_in_group(GroupsNamespace.PLAYER) + \\
		get_tree().get_nodes_in_group(GroupsNamespace.COOKIE)).filter(func(i:Node): return i is Node2D)
	
	var _target : Node2D = null
	for i:Node2D in possible_targets:
		# у агра на игрока приоритет
		if i.is_in_group(GroupsNamespace.PLAYER):
			if global_position.distance_to(i.global_position) < hunt_distance:
				_target = i
				break
		elif _target == null or global_position.distance_to(i.global_position) < global_position.distance_to(_target.global_position):
			if global_position.distance_to(i.global_position) < cookie_scan_distance:
				_target = i
	
	if _target != null:
		_chilling_time = 0.0
		_is_chilling_walk = false
		if _target.is_in_group(GroupsNamespace.PLAYER):
			if _attack_ready:
				_state_attacking_player(_target)
			else:
				velocity = -global_position.direction_to(_target.global_position).normalized()*running_speed
				%StateLabel.text = \"running away\"
		elif _target.is_in_group(GroupsNamespace.COOKIE):
			_state_hunting_cookie(_target)
	else:
		%StateLabel.text = \"chilling\"
		_chilling_time += delta
		
		if _is_chilling_walk:
			if _chilling_time >= chilling_walk_time_sec:
				_chilling_time = 0.0
				_is_chilling_walk = false
				velocity = Vector2.ZERO
		else:
			if _chilling_time >= chilling_stay_time_sec:
				_chilling_time = 0.0
				_is_chilling_walk = true
				velocity = Vector2.RIGHT.rotated(2*PI*randf())*running_speed


func _state_idle() -> void:
	velocity = Vector2.ZERO
	_state = State.IDLE


func _state_hunting_cookie(cookie:Node2D) -> void:
	velocity = Vector2.ZERO
	_state = State.HUNTING_COOKIE
	_target_cookie = cookie
	_target_cookie.remove_from_group(GroupsNamespace.COOKIE)
	%NavigationAgent.target_position = cookie.global_position
	%StateLabel.text = \"hunting cookie\"


func _state_eating_cookie() -> void:
	_state = State.EATING_COOKIE
	%StateLabel.text = \"eating cookie\"
	velocity = Vector2.ZERO
	await get_tree().create_timer(1.0).timeout
	_target_cookie.queue_free()
	_target_cookie = null
	_state_idle()


func _state_attacking_player(player:Node2D) -> void:
	const BULLET_SCENE : PackedScene = preload(ScenesNamespace.COCKROACH_BULLET_FILEPATH)
	
	_state = State.ATTACKING_PLAYER
	velocity = Vector2.ZERO
	%StateLabel.text = \"attacking player\"
	await get_tree().create_timer(1.0).timeout
	if global_position.distance_to(player.global_position) <= hunt_distance:
		var bullet : Node2D = BULLET_SCENE.instantiate()
		bullet.global_position = global_position
		bullets_container.add_child(bullet)
		_attack_ready = false
		%AttackCooldownTimer.start()
	_state_idle()


func _on_attack_cooldown_timer_timeout() -> void:
	_attack_ready = true


func _draw() -> void:
	draw_circle(Vector2.ZERO, hunt_distance, Color.RED, false)
	draw_circle(Vector2.ZERO, cookie_scan_distance, Color.GREEN, false)
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_7nbhp"]
radius = 17.0
height = 58.0

[node name="CockroachFat" type="CharacterBody2D" groups=["damagable", "destructable"]]
script = SubResource("GDScript_38a08")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CapsuleShape2D_7nbhp")

[node name="NavigationAgent" type="NavigationAgent2D" parent="."]
unique_name_in_owner = true
debug_enabled = true
debug_use_custom = true

[node name="StateLabel" type="Label" parent="."]
unique_name_in_owner = true
offset_left = -185.0
offset_top = -73.0
offset_right = 185.0
offset_bottom = -50.0
horizontal_alignment = 1

[node name="AttackCooldownTimer" type="Timer" parent="."]
unique_name_in_owner = true
wait_time = 6.792
one_shot = true

[connection signal="timeout" from="AttackCooldownTimer" to="." method="_on_attack_cooldown_timer_timeout"]
