[gd_scene load_steps=2 format=3 uid="uid://1ychfgeutxkk"]

[sub_resource type="GDScript" id="GDScript_rx2pe"]
resource_name = "main"
script/source = "extends Node2D

@export var speed : float = 700.0
@export var explosion_radius : float = 20.0
@export var max_affected_targets : int = 1
@export var gravity : float = 100.0
@export var damage : float = 10.0

@onready var _initial_position : Vector2 = global_position

var excludes : Array[RID] = []
var height : float

var _exploded_targets_count : int = 0
var _process_height : float = 0.0


func _physics_process(delta: float) -> void:
	_process_height += delta*speed
	if _process_height >= height:
		global_position = _initial_position + Vector2.DOWN*height
		_explode()
		queue_free()
		return
	
	global_position = _initial_position + Vector2.DOWN*_process_height
	speed += gravity*delta


func _explode() -> void:
	var shape : CircleShape2D = CircleShape2D.new()
	shape.radius = explosion_radius
	
	var intersect_parameters : PhysicsShapeQueryParameters2D = PhysicsShapeQueryParameters2D.new()
	intersect_parameters.shape = shape
	intersect_parameters.exclude = excludes
	intersect_parameters.transform = Transform2D(0.0, global_position)
	
	var collisions : Array[Dictionary] = \\
		PhysicsServer2D.space_get_direct_state(get_world_2d().space).intersect_shape(intersect_parameters)
	
	for i:Dictionary in collisions:
		if not _explode_target(i[\"collider\"]):
			return


func _explode_target(target:Object) -> bool:
	_exploded_targets_count += 1
	
	if target is not Node:
		return _exploded_targets_count < max_affected_targets
	
	if target.is_in_group(GroupsNamespace.DAMAGABLE):
		target.take_damage(damage)
	
	print(\"Exploded: %s for %.2f dmg\" % [target.name, damage])
	return _exploded_targets_count < max_affected_targets
"

[node name="PlayerBomb" type="Node2D"]
script = SubResource("GDScript_rx2pe")
speed = 50.0
explosion_radius = 10.0
gravity = 200.0

[node name="Polygon2D" type="Polygon2D" parent="."]
position = Vector2(1, -1)
color = Color(1, 0, 0, 1)
polygon = PackedVector2Array(5, 5, 6, 1, 3, -5, -2, -5, -7, -2, -9, 2, -4, 8)
