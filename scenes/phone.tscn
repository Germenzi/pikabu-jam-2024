[gd_scene load_steps=3 format=3 uid="uid://b6acobdd1i8mc"]

[sub_resource type="GDScript" id="GDScript_npwxh"]
resource_name = "main"
script/source = "extends StaticBody2D

signal stage_changed(stage_idx:int)
signal destroyed

@export var stages : int = 6
@export var health : float = 300.0

var _taking_damage : bool = true
var _max_health : float = health

func allow_new_stage() -> void:
	_taking_damage = true


func take_damage(amount:float) -> void:
	if not _taking_damage:
		return
	
	var stage : int = round(health/_max_health * stages)
	health -= amount
	if health <= 0.0:
		health = 0.0
		destroyed.emit()
		return
	
	var new_stage : int = round(health/_max_health * stages)
	if new_stage != stage:
		_taking_damage = false
		stage_changed.emit(new_stage)


func _process(delta: float) -> void:
	%HealthLabel.text = \"Health: %.1f\\nDamagable: %s\\nStage: %s\" % [health, _taking_damage, round(health/_max_health * stages)]
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_855ep"]
size = Vector2(112, 208)

[node name="Phone" type="StaticBody2D" groups=["damagable", "dash_immunity"]]
script = SubResource("GDScript_npwxh")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("RectangleShape2D_855ep")

[node name="HealthLabel" type="Label" parent="."]
unique_name_in_owner = true
offset_left = -607.0
offset_top = -193.0
offset_right = 603.0
offset_bottom = -145.0
horizontal_alignment = 1
